{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Work/Code/todo-react-redux-ts/client/src/components/NewTodo.tsx\";\nimport React, { useRef } from \"react\";\nimport \"./NewTodo.css\";\n;\n\nconst NewTodo = props => {\n  // textInputRef.current refers to the corresponding DOM node, whenever that node changes\n  const textInputRef = useRef(null);\n\n  const todoSubmitHandler = event => {\n    event.preventDefault();\n    const enteredText = textInputRef.current.value;\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: todoSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Todo Text\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"todo-text\",\n    ref: textInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Add TODO\"));\n};\n\nexport default NewTodo;","map":{"version":3,"sources":["/Users/ethan/Work/Code/todo-react-redux-ts/client/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","textInputRef","todoSubmitHandler","event","preventDefault","enteredText","current","value","onAddTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AAEA,OAAO,eAAP;AAIC;;AAED,MAAMC,OAA+B,GAAIC,KAAD,IAAW;AAC/C;AACA,QAAMC,YAAY,GAAGH,MAAM,CAAmB,IAAnB,CAA3B;;AAEA,QAAMI,iBAAiB,GAAIC,KAAD,IAA4B;AAClDA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGJ,YAAY,CAACK,OAAb,CAAsBC,KAA1C;AAEAP,IAAAA,KAAK,CAACQ,SAAN,CAAgBH,WAAhB;AACH,GAND;;AAQA,sBACI;AAAM,IAAA,QAAQ,EAAEH,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,WAAtB;AAAkC,IAAA,GAAG,EAAED,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ;AASH,CArBD;;AAuBA,eAAeF,OAAf","sourcesContent":["import React, {useRef} from \"react\";\n\nimport \"./NewTodo.css\";\n\ninterface NewTodoProps {\n    onAddTodo: (todoText: string) => void;\n};\n\nconst NewTodo: React.FC<NewTodoProps> = (props) => {\n    // textInputRef.current refers to the corresponding DOM node, whenever that node changes\n    const textInputRef = useRef<HTMLInputElement>(null);\n\n    const todoSubmitHandler = (event: React.FormEvent) => {\n        event.preventDefault();\n        \n        const enteredText = textInputRef.current!.value;\n\n        props.onAddTodo(enteredText);\n    };\n\n    return (\n        <form onSubmit={todoSubmitHandler} >\n            <div className=\"form-control\">\n                <label htmlFor=\"todo-test\">Todo Text</label>\n                <input type=\"text\" id=\"todo-text\" ref={textInputRef} />\n            </div>\n            <button type=\"submit\">Add TODO</button>\n        </form>\n    );\n};\n\nexport default NewTodo;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Work/Code/todo-react-redux-ts/client/src/components/ColorfulText.tsx\";\nimport React from \"react\"; // High order component (HOC)\n// set color for the wrapped component\n\nconst ColorFulText = WrappedComponent => {\n  const colors = [\"red\", \"pink\", \"orange\", \"blue\", \"green\", \"yellow\"];\n  const randomColor = colors[Math.floor(Math.random() * 5)];\n  const className = randomColor + \"-text\"; // materializecss classname\n\n  return props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    })));\n  };\n};\n\nexport default ColorFulText;","map":{"version":3,"sources":["/Users/ethan/Work/Code/todo-react-redux-ts/client/src/components/ColorfulText.tsx"],"names":["React","ColorFulText","WrappedComponent","colors","randomColor","Math","floor","random","className","props"],"mappings":";AAAA,OAAOA,KAAP,MAA2B,OAA3B,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAIC,gBAAD,IAA2B;AAC/C,QAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,QAA3C,CAAf;AACA,QAAMC,WAAW,GAAGD,MAAM,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAA1B;AACA,QAAMC,SAAS,GAAGJ,WAAW,GAAG,OAAhC,CAH+C,CAGN;;AAEzC,SAAQK,KAAD,IAAgB;AACtB,wBACC;AAAK,MAAA,SAAS,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,gBAAD,oBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADD;AAKA,GAND;AAOA,CAZD;;AAcA,eAAeR,YAAf","sourcesContent":["import React, { SFC } from \"react\";\n\n// High order component (HOC)\n// set color for the wrapped component\n\nconst ColorFulText = (WrappedComponent: SFC) => {\n\tconst colors = [\"red\", \"pink\", \"orange\", \"blue\", \"green\", \"yellow\"];\n\tconst randomColor = colors[Math.floor(Math.random() * 5)];\n\tconst className = randomColor + \"-text\"; // materializecss classname\n\n\treturn (props: any) => {\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<WrappedComponent {...props} />\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default ColorFulText;\n"]},"metadata":{},"sourceType":"module"}